// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementApi.Data;

#nullable disable

namespace UserManagementApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250418165455_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UserManagementApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Sistema",
                            Email = "admin@ejemplo.com",
                            FechaCreacion = new DateTime(2025, 4, 18, 13, 54, 55, 528, DateTimeKind.Local).AddTicks(6743),
                            Nombre = "Admin",
                            Rol = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Apellido = "Común",
                            Email = "usuario@ejemplo.com",
                            FechaCreacion = new DateTime(2025, 4, 18, 13, 54, 55, 528, DateTimeKind.Local).AddTicks(6761),
                            Nombre = "Usuario",
                            Rol = "Usuario"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
